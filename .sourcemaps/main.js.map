{"version":3,"sources":["../../src/actions/text-item.action.ts","../../src/pages/signup/signup.page.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/page1/page1.ts","../../src/pages/page2/page2.ts","../../src/pages/home/home.page.ts","../../src/effects/text-item.effect.ts","../../src/pages/login/login.page.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/reducers/collection.ts","../../src/reducers/login.reducer.ts","../../src/app/rxjs-operators.ts","../../src/components/error/error.component.ts","../../src/components/example-list/example-list.component.ts","../../src/app/my-firebase-app-config.ts","../../src/effects/login.effect.ts","../../src/reducers/index.ts","../../src/actions/login.action.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Action } from '@ngrx/store';\r\nimport { TextItem } from '../models';\r\n\r\nexport const LOAD_COLLECTION = '[TextItem] Load Collection';\r\nexport const LOAD_COLLECTION_SUCCESS = '[TextItem] Load Collection Success';\r\n\r\nexport class LoadCollectionAction implements Action {\r\n  readonly type = LOAD_COLLECTION;\r\n\r\n  constructor() { }\r\n}\r\n\r\nexport class LoadCollectionSuccessAction implements Action {\r\n  readonly type = LOAD_COLLECTION_SUCCESS;\r\n\r\n  constructor(public payload: TextItem[]) { }\r\n}\r\n\r\nexport type Actions =\r\n  LoadCollectionAction |\r\n  LoadCollectionSuccessAction;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/text-item.action.ts","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport * as fromRoot from '../../reducers';\r\nimport * as loginActions from '../../actions/login.action';\r\n\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: 'signup.page.html'\r\n})\r\nexport class SignupPage {\r\n  // signup: { username?: string, password?: string } = {};\r\n  submitted = false;\r\n  public loginForm: FormGroup;\r\n\r\n  loginState$: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private store: Store<fromRoot.State>) {\r\n    //\r\n    this.loginState$ = this.store.select(fromRoot.getLoginState);\r\n\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });    \r\n  }\r\n\r\n/*\r\n  ionViewDidLoad() {\r\n    //\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n*/\r\n\r\n  logForm() {\r\n    console.log(this.loginForm.value);\r\n    console.log('loginForm>', this.loginForm);\r\n\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.valid) {\r\n      this.store.dispatch(\r\n        new loginActions.CreateUserAction({\r\n          userName: this.loginForm.value.username,\r\n          password: this.loginForm.value.password,\r\n        }));\r\n    }\r\n  }\r\n  /*\r\n  onSignup(form) {\r\n    this.submitted = true;\r\n\r\n    if (form.valid) {\r\n      this.store.dispatch(\r\n        this.loginActions.createUser(\r\n          this.signup.username,\r\n          this.signup.password));\r\n    }\r\n  }\r\n*/\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/signup/signup.page.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 145;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 145\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 190;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 190\n// module chunks = 0","import { Component } from '@angular/core';\n\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-page1',\n  templateUrl: 'page1.html'\n})\nexport class Page1 {\n\n  constructor(\n    public navCtrl: NavController,\n  ) {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/page1/page1.ts","import { Component } from '@angular/core';\n\nimport { NavController, NavParams } from 'ionic-angular';\n\nexport interface ItemInterface {\n  title: string, \n  note: string, \n  icon: string\n}\n\n@Component({\n  templateUrl: 'page2.html'\n})\nexport class Page2 {\n  selectedItem: any;\n  icons: string[];\n  items: Array<{title: string, note: string, icon: string}>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    // If we navigated to this page, we will have an item available as a nav param\n    this.selectedItem = navParams.get('item');\n\n    // Let's populate this page with some filler content for funzies\n    this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\n    'american-football', 'boat', 'bluetooth', 'build'];\n\n    this.items = [];\n    for (let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }\n\n  itemTapped(event: Event, item: ItemInterface) {\n    // That's right, we're pushing to ourselves!\n    this.navCtrl.push(Page2, {\n      item: item\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/page2/page2.ts","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { IsFetchingInput, PostsInput } from '../../components/example-list/example-list.component';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromRoot from '../../reducers';\r\nimport * as textItemActions from '../../actions/text-item.action'\r\n\r\nimport { TextItemEffects } from '../../effects/text-item.effect';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [ TextItemEffects ],\r\n  templateUrl: 'home.page.html'\r\n})\r\nexport class HomePage implements OnInit {\r\n  posts$: Observable<PostsInput>;\r\n  isFetching$: Observable<IsFetchingInput>;\r\n\r\n  effectsSubscription: Subscription;\r\n\r\n  constructor(\r\n    // private textItemEffects: TextItemEffects,\r\n    private store: Store<fromRoot.State>\r\n  ) {\r\n    this.isFetching$ = store.select(fromRoot.getCollectionLoading);\r\n    this.posts$ = store.select(fromRoot.getCollectionTextItems);\r\n\r\n    // this.effectsSubscription = textItemEffects.loadCollection$.subscribe(store);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(\r\n      new textItemActions.LoadCollectionAction());\r\n    // this.isFetching$ = Observable.of(false);\r\n    // this.posts$ = this.af.database.list('/textItems')\r\n    // .do(v => {console.log('posts>', v)});   \r\n  }\r\n\r\n  doSearch(ev: any) {\r\n    //\r\n    // set val to the value of the ev target\r\n    console.log('doSearch');\r\n    var val = ev.target.value;\r\n\r\n    // if the value is an empty string don't filter the items\r\n    if (val && val.trim() !== '') {\r\n      //      this.items = this.items.filter((item) => {\r\n      //        return (item.toLowerCase().indexOf(val.toLowerCase()) > -1);\r\n      //      })\r\n    }\r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad');\r\n    // this.effectsSubscription.unsubscribe();\r\n  }\r\n\r\n  ionViewDidUnload() {\r\n    console.log('ionViewDidUnload');\r\n    // this.effectsSubscription.unsubscribe();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.page.ts","import 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/mapTo';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport 'rxjs/add/operator/startWith';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/switchMapTo';\r\nimport 'rxjs/add/operator/toArray';\r\nimport 'rxjs/add/operator/withLatestFrom';\r\nimport 'rxjs/add/observable/of';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions} from '@ngrx/effects';\r\n// error TS4029: https://github.com/Microsoft/TypeScript/issues/5938\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport * as textItemActions from '../actions/text-item.action';\r\n\r\nimport { TextItem } from '../models';\r\n// import { AngularFire, } from 'angularfire2';\r\nimport { AngularFireDatabase } from 'angularfire2/database';\r\n\r\nimport { State } from '../reducers';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class TextItemEffects {\r\n  constructor(\r\n        private actions$: Actions,\r\n        private state$: Store<State>,         \r\n        public af: AngularFireDatabase\r\n  ) { }\r\n\r\n  @Effect() loadCollection$ = this.actions$\r\n    .ofType(textItemActions.LOAD_COLLECTION)\r\n    // This will cause the effect to run once immediately on startup\r\n    // .startWith(new LoadCollectionAction())    \r\n    .do(x => { console.log('Effect:loadCollection$:A', x); })\r\n    .withLatestFrom(this.state$)\r\n    // tslint:disable-next-line:no-unused-variable    \r\n    .filter(([action, state]) => (<State>state).login.isAuthenticated)\r\n    // Watch database node and get TextItems.\r\n    .switchMap(() => this.af.list('/textItems'))\r\n    .do(x => { console.log('Effect:loadCollection$:B', x); })\r\n    .map((textItems: TextItem[]) => new textItemActions.LoadCollectionSuccessAction(textItems));\r\n}\r\n\r\n//   .withLatestFrom(this.store.select('masterGain'))\r\n// .withLatestFrom(this.state$, (action, state) => state.aaa)\r\n\r\n/*\r\n  @Effect() redirectAfterLogin$ = this.actions$\r\n    .ofType(AuthActions.REDIRECT_AFTER_LOGIN)\r\n    .withLatestFrom(this.store.let(appSelectors.getAuthRedirectUrl()))\r\n    .do(([action, url]) => router.navigateByUrl.next(url))\r\n    .mapTo(this.authActions.resetRedirectAfterLogin())\r\n*/\r\n\r\n/*\r\n@Injectable()\r\nexport class UserService implements OnDestroy {\r\n  // our subscription(s) to @ngrx/effects\r\n  private subscription: Subscription;\r\n\r\n  constructor(private router: Router, private actions$: Actions, private store$: Store<AppState>) {\r\n    this.subscription = mergeEffects(this).subscribe(store$);\r\n  }\r\n\r\n  @Effect({dispatch: false}) usr_connect$ = this.actions$\r\n    .ofType(USR_CONNECT)\r\n    .withLatestFrom(this.store$)\r\n    .do(([action, state]) => {console.log(state)})\r\n    .do(() => this.router.navigate(['/petals-cockpit']));\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n*/\r\n\r\n// http://stackoverflow.com/search?q=%5Bngrx%5D+withlatestfrom\r\n// https://github.com/teropa/harmonics-explorer/blob/master/src/app/services/audio.service.ts\r\n\r\n/*\r\n  constructor(\r\n    private actions$: Actions,\r\n    private store: Store<AppState>\r\n  ) {}\r\n\r\n @Effect() bar$ = this.actions$\r\n    .ofType(ActionTypes.FOO)\r\n    .withLatestFrom(this.store, (action, state) => state.user.isCool)\r\n    .distinctUntilChanged()\r\n    .filter(x => x)\r\n    .map(() => ({ type: ActionTypes.BAR }));\r\n    */\r\n\r\n/*\r\n  @Effect() update$ = this.action$\r\n    .ofType('UPDATE_NOTE_TEXT', 'UPDATE_NOTE_POSITION', 'ADD_NOTE')\r\n    .withLatestFrom(this.store.select('notes'))\r\n    .mergeMap(notes => Observable.from(notes))\r\n    .filter((note:Note) => {return (note.dirty==true)})\r\n    .switchMap((updatedNote:Note) => this.notesDataService.addOrUpdateNote(updatedNote)\r\n      .map((responseNote:Note) => ({ type: \"UPDATE_NOTE_FROM_SERVER\", payload: { note: responseNote } }))\r\n      .catch(() => Observable.of({ type: \"UPDATE_FAILED\" }))\r\n    )    \r\n*/    \n\n\n// WEBPACK FOOTER //\n// ./src/effects/text-item.effect.ts","import { ChangeDetectionStrategy, Component } from '@angular/core';\r\nimport { NavController } from 'ionic-angular';\r\nimport { SignupPage } from '../signup/signup.page';\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromRoot from '../../reducers';\r\nimport * as loginActions from '../../actions/login.action';\r\n\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: 'login.page.html'\r\n})\r\nexport class LoginPage {\r\n  // login: { username?: string, password?: string } = {};\r\n  submitted = false;\r\n  public loginForm: FormGroup; \r\n\r\n  loginState$: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private nav: NavController,\r\n    private store: Store<fromRoot.State>,\r\n    ) {\r\n    //\r\n    this.loginState$ = this.store.select(fromRoot.getLoginState);\r\n\r\n     this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });   \r\n  }\r\n\r\n/*\r\n  ionViewDidLoad() {\r\n    //\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n*/\r\n\r\n  logForm() {\r\n    console.log(this.loginForm.value);\r\n    console.log('loginForm>', this.loginForm);\r\n\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.valid) {\r\n      this.store.dispatch(\r\n        new loginActions.EmailAuthenticationAction({\r\n          userName: this.loginForm.value.username,\r\n          password: this.loginForm.value.password\r\n        }));\r\n    }    \r\n  }\r\n\r\n  onLogin() {\r\n    this.submitted = true;\r\n\r\n    if (this.loginForm.valid) {\r\n      this.store.dispatch(\r\n        new loginActions.EmailAuthenticationAction({\r\n          userName: this.loginForm.value.username,\r\n          password: this.loginForm.value.password\r\n        }));\r\n    }\r\n  }\r\n\r\n  onSignup() {\r\n    this.nav.push(SignupPage);\r\n  }\r\n\r\n  signInAnonymously() {\r\n    this.store.dispatch(\r\n      new loginActions.AnonymousAuthenticationAction());\r\n  }\r\n\r\n  signInWithGoogle() {\r\n    this.store.dispatch(\r\n      new loginActions.GoogleAuthenticationAction());\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.page.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\n\r\nimport { MyApp } from './app.component';\r\nimport { Page1 } from '../pages/page1/page1';\r\nimport { Page2 } from '../pages/page2/page2';\r\nimport { HomePage } from '../pages/home/home.page';\r\nimport { LoginPage } from '../pages/login/login.page';\r\nimport { SignupPage } from '../pages/signup/signup.page';\r\n\r\nimport { Error } from '../components/error/error.component';\r\nimport { ExampleList } from '../components/example-list/example-list.component';\r\n\r\nimport { AngularFireModule } from 'angularfire2';\r\nimport { AngularFireAuthModule } from 'angularfire2/auth';\r\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\r\nimport { MyFirebaseAppConfig } from './my-firebase-app-config';\r\n\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\nimport { reducers } from '../reducers';\r\n\r\nimport { LoginEffects } from '../effects/login.effect';\r\nimport { TextItemEffects } from '../effects/text-item.effect';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Error,\r\n    ExampleList,\r\n    MyApp,\r\n    Page1,\r\n    Page2,\r\n    HomePage,\r\n    LoginPage,\r\n    SignupPage,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    IonicModule.forRoot(MyApp),\r\n    AngularFireModule.initializeApp(MyFirebaseAppConfig),\r\n    AngularFireAuthModule,\r\n    AngularFireDatabaseModule,\r\n    StoreModule.forRoot(reducers),\r\n    StoreDevtoolsModule.instrument(),\r\n    EffectsModule.forRoot([\r\n      LoginEffects,\r\n      TextItemEffects]),\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    Page1,\r\n    Page2,\r\n    HomePage,\r\n    LoginPage,\r\n    SignupPage\r\n  ],\r\n  providers: [\r\n    StatusBar,\r\n    { provide: ErrorHandler, useClass: IonicErrorHandler }\r\n  ]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, ViewChild } from '@angular/core';\r\nimport { Nav, Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\n\r\nimport { Page1 } from '../pages/page1/page1';\r\nimport { Page2 } from '../pages/page2/page2';\r\nimport { HomePage } from '../pages/home/home.page';\r\nimport { LoginPage } from '../pages/login/login.page';\r\nimport { SignupPage } from '../pages/signup/signup.page';\r\n\r\nimport { Store } from '@ngrx/store';\r\nimport * as FromRoot from '../reducers';\r\n\r\n// Should be import * as LoginActions from '../actions/login.action';\r\n// See: https://gitter.im/ngrx/effects?at=57f3a2cbd45d7f0f52601422\r\nimport * as LoginActions from '../actions/login.action'\r\n//\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\n// Do not import from 'firebase' as you'd lose the tree shaking benefits\r\nimport * as firebase from 'firebase/app';\r\n\r\n\r\n// Add the RxJS Observable operators we need in this app.\r\nimport './rxjs-operators';\r\n\r\nexport interface PageInterface {\r\n  title: string;\r\n  component: any;\r\n  // icon: string;\r\n  // logsOut?: boolean;\r\n  // index?: number;\r\n  // tabComponent?: any;\r\n}\r\n\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  @ViewChild(Nav) nav: Nav;\r\n\r\n  // rootPageAA: any = Page1;\r\n  rootPage: any;\r\n  pages: Array<PageInterface>;\r\n\r\n  loginState$: any;\r\n  // private subscription;\r\n\r\n  constructor(\r\n    public afAuth: AngularFireAuth ,\r\n    public platform: Platform,\r\n    public statusBar: StatusBar,\r\n    private store: Store<FromRoot.State>,\r\n  ) {\r\n    //\r\n    console.log('MyApp:constructor');\r\n    this.initializeApp();\r\n\r\n    this.loginState$ = this.store.select(FromRoot.getLoginState);\r\n\r\n    // used for an example of ngFor and navigation\r\n    this.pages = [\r\n      { title: 'Page One', component: Page1 },\r\n      { title: 'Page Two', component: Page2 },\r\n      { title: 'Page Home', component: HomePage },\r\n      { title: 'Page Login', component: LoginPage },\r\n      { title: 'Page Signup', component: SignupPage },\r\n      { title: 'Logout', component: Page1 },\r\n    ];\r\n    // Subscribe to the auth object to check for the login status\r\n    // of the user.      \r\n    afAuth.authState.take(1).subscribe((authState: firebase.User) => {\r\n      // Run once.\r\n      // af.auth.unsubscribe();\r\n\r\n      console.log('af.auth.subscribe:authState>', authState);\r\n      let authenticated: boolean = !!authState;\r\n\r\n      console.log('authenticated:', authenticated);\r\n      // this.rootPage = HomePage;\r\n      if (authenticated) {\r\n        this.rootPage = HomePage;\r\n\r\n        this.store.dispatch(\r\n          new LoginActions.RestoreAuthenticationAction({\r\n            displayName: authState.displayName,\r\n            email: authState.email,\r\n            isAnonymous: authState.isAnonymous,\r\n          }));\r\n      } else {\r\n        this.rootPage = Page1;\r\n      }\r\n    });\r\n  }\r\n\r\n  initializeApp() {\r\n    this.platform.ready().then(() => {\r\n      console.log('platform.ready');\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      this.statusBar.styleDefault();\r\n    });\r\n\r\n    /*\r\n        this.subscription =\r\n          this.store\r\n            .let(FromRoot.getLoginState)\r\n            .subscribe(loginState => {\r\n              // Triggered when loginState changes. \r\n              // i.e. when user logs in or logs out.\r\n              console.log('loginState>', loginState);\r\n              console.log('loginState.isAuthorized>', loginState.isAuthenticated);\r\n              // this.enableMenu(loginState.isAuthenticated);\r\n    \r\n              /*\r\n                        if (loginState.isAuthorized) {\r\n                          this.rootPage = HomePage;\r\n                        }\r\n                        else {\r\n                          this.rootPage = LoginPage;\r\n                        }\r\n              * /\r\n            });\r\n    */\r\n  }\r\n\r\n  openPage(page: PageInterface) {\r\n    console.log('openPage');\r\n\r\n    // Reset the content nav to have just this page\r\n    // we wouldn't want the back button to show in this scenario\r\n    this.nav.setRoot(page.component);\r\n\r\n    if (page.title === 'Logout') {\r\n      // Give the menu time to close before changing to logged out\r\n      setTimeout(() => {\r\n        // this.userData.logout();\r\n        this.store.dispatch(\r\n          new LoginActions.LogoutAction());\r\n        this.afAuth.auth.signOut();\r\n      }, 1000);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import * as textItemActions from '../actions/text-item.action';\r\n\r\nimport { TextItem } from '../models';\r\n\r\nexport interface State {\r\n  loaded: boolean;\r\n  loading: boolean;\r\n  textItems: TextItem[];\r\n};\r\n\r\nconst initialState: State = {\r\n  loaded: false,\r\n  loading: false,\r\n  textItems: []\r\n};\r\n\r\nexport function reducer(state = initialState, action: textItemActions.Actions): State {\r\n  switch (action.type) {\r\n    case textItemActions.LOAD_COLLECTION: {\r\n      return {\r\n        ...state, \r\n        loading: true\r\n      };\r\n    }\r\n\r\n    case textItemActions.LOAD_COLLECTION_SUCCESS: {\r\n      const books: TextItem[] = action.payload;\r\n\r\n      return {\r\n        loaded: true,\r\n        loading: false,\r\n        textItems: books.map(book => book)\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport const getLoaded = (state: State) => state.loaded;\r\nexport const getLoading = (state: State) => state.loading;\r\nexport const getTextItems = (state: State) => state.textItems;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/collection.ts","import * as loginActions from '../actions/login.action';\r\n\r\nexport interface State {\r\n    displayName: string;\r\n    isAuthenticated: boolean;\r\n    isAuthenticating: boolean;\r\n    error: any;\r\n};\r\n\r\nconst initialState: State = {\r\n    displayName: '',\r\n    isAuthenticated: false,\r\n    isAuthenticating: false,\r\n    error: null\r\n};\r\n\r\nexport function reducer(state = initialState, action: loginActions.Actions): State {\r\n    switch (action.type) {\r\n        case loginActions.GOOGLE_AUTHENTICATION: {\r\n            return {\r\n                ...state, \r\n                isAuthenticating: true\r\n            };\r\n        }\r\n\r\n        // case loginAction.ActionTypes.ANONYMOUS_AUTHENTICATION_SUCCESS:\r\n        // case loginAction.ActionTypes.CREATE_USER_SUCCESS:\r\n        // case loginAction.ActionTypes.EMAIL_AUTHENTICATION_SUCCESS:\r\n        // case loginAction.ActionTypes.GOOGLE_AUTHENTICATION_SUCCESS:\r\n        case loginActions.RESTORE_AUTHENTICATION: {\r\n            return {\r\n                ...state, \r\n                displayName: makeDisplayName(action.payload),\r\n                isAuthenticated: true,\r\n                isAuthenticating: false\r\n            };\r\n        }\r\n\r\n        case loginActions.LOGOUT: {\r\n            return { \r\n                ...state, \r\n                displayName: '',\r\n                isAuthenticated: false,\r\n                isAuthenticating: false\r\n            };\r\n        }\r\n\r\n        case loginActions.ANONYMOUS_AUTHENTICATION:\r\n        case loginActions.CREATE_USER:\r\n        case loginActions.EMAIL_AUTHENTICATION: {\r\n            return {\r\n                ...state, \r\n                error: null,\r\n                isAuthenticating: true\r\n            };\r\n        }\r\n\r\n        case loginActions.ANONYMOUS_AUTHENTICATION_FAILURE:\r\n        case loginActions.CREATE_USER_FAILURE:\r\n        case loginActions.EMAIL_AUTHENTICATION_FAILURE: {\r\n            return {\r\n                ...state, \r\n                error: action.payload,\r\n                isAuthenticating: false\r\n            };\r\n        }\r\n\r\n        /*\r\n                case LoginActions.ANONYMOUS_AUTHENTICATION_SUCCESS: {\r\n                    let user: FirebaseAuthState = action.payload;\r\n        \r\n                    return Object.assign({}, state, {\r\n                        error: null,\r\n                        displayName: 'Anonymous',\r\n                        isAuthenticated: true,\r\n                        isAuthenticating: false\r\n                    });\r\n                } \r\n        */\r\n        /*\r\n                case LoginActions.CREATE_USER_SUCCESS:  \r\n                case LoginActions.EMAIL_AUTHENTICATION_SUCCESS: {\r\n                    let user: FirebaseAuthState = action.payload;\r\n        \r\n                    return Object.assign({}, state, {\r\n                        error: null,\r\n                        displayName: user.auth.email,\r\n                        isAuthenticated: true,\r\n                        isAuthenticating: false\r\n                    });\r\n                }        \r\n        */\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nfunction makeDisplayName(user: {\r\n        isAnonymous: boolean;\r\n        displayName: string | null,\r\n        email: string | null,\r\n    }) {\r\n    if (user.isAnonymous) return 'Anonymous';\r\n\r\n    if (user.displayName) return user.displayName;\r\n\r\n    if (user.email) return user.email;\r\n    return '';\r\n}\r\n\r\nexport const getDisplayName = (state: State) => state.displayName;\r\nexport const getError = (state: State) => state.error;\r\nexport const getIsAuthenticated = (state: State) => state.isAuthenticated;\r\nexport const getIsAuthenticating = (state: State) => state.isAuthenticating;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/login.reducer.ts","// import 'rxjs/Rx'; // adds ALL RxJS statics & operators to Observable\r\n\r\n// See node_module/rxjs/Rxjs.js\r\n// Import just the rxjs statics and operators we need for THIS app.\r\n\r\n// Statics\r\n// import 'rxjs/add/observable/throw';\r\n\r\n// Operators\r\n// import 'rxjs/add/operator/catch';\r\n// import 'rxjs/add/operator/debounceTime';\r\n// import 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/do';\r\n// import 'rxjs/add/operator/map';\r\n// import 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/take';\r\n// import 'rxjs/add/operator/toPromise';\n\n\n// WEBPACK FOOTER //\n// ./src/app/rxjs-operators.ts","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\r\n\r\nexport type ErrorInput = any;\r\n\r\n@Component({\r\n    selector: 'error',\r\n    templateUrl: 'error.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class Error {\r\n    @Input() error: ErrorInput;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/error/error.component.ts","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\r\n\r\nimport { TextItem } from '../../models';\r\n\r\nexport type IsFetchingInput = boolean;\r\nexport type PostsInput = TextItem[];\r\n\r\n@Component({\r\n    selector: 'example-list',\r\n    templateUrl: 'example-list.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ExampleList {\r\n    @Input() posts: PostsInput;\r\n    @Input() isFetching: IsFetchingInput;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/example-list/example-list.component.ts","import {\r\n  FirebaseAppConfig\r\n} from 'angularfire2';\r\n\r\nexport const MyFirebaseAppConfig: Readonly<FirebaseAppConfig> = {\r\n  apiKey: \"AIzaSyCmmYWAhk1mgzdRQKQ0wMglyENXmCnL3NY\",\r\n  authDomain: \"first-try-262cf.firebaseapp.com\",\r\n  databaseURL: \"https://first-try-262cf.firebaseio.com\",\r\n  storageBucket: \"first-try-262cf.appspot.com\",\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/my-firebase-app-config.ts","import 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/mapTo';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport 'rxjs/add/operator/startWith';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/switchMapTo';\r\nimport 'rxjs/add/operator/toArray';\r\nimport 'rxjs/add/operator/withLatestFrom';\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/observable/from';\r\nimport 'rxjs/add/observable/fromPromise';\r\n\r\nimport 'rxjs/add/operator/first';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Effect, Actions } from '@ngrx/effects';\r\n// error TS4029: https://github.com/Microsoft/TypeScript/issues/5938\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n// import { LoadCollectionSuccessAction, TextItemActionTypes } from '../actions/textitem.action';\r\n\r\nimport * as loginActions from '../actions/login.action';\r\n\r\n// import { TextItem } from '../models';\r\n//\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\n// Do not import from 'firebase' as you'd lose the tree shaking benefits\r\nimport * as firebase from 'firebase/app';\r\n\r\nimport { State } from '../reducers';\r\nimport { Store } from '@ngrx/store';\r\n\r\n@Injectable()\r\nexport class LoginEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private state$: Store<State>,\r\n    public af: AngularFireAuth\r\n  ) { }\r\n\r\n  // https://gitter.im/ngrx/store?at=57f1bf01b0ff456d3adca786\r\n  // But this link gives typescript promise errors.\r\n\r\n  @Effect({ dispatch: false }) anonymousAuthentication$ = this.actions$\r\n    .ofType(loginActions.ANONYMOUS_AUTHENTICATION)\r\n    .map(() =>\r\n      this.af.auth.signInAnonymously()\r\n        .then(user => this.state$.dispatch(new loginActions.RestoreAuthenticationAction({\r\n          displayName: user.auth.displayName,\r\n          email: user.auth.email,\r\n          isAnonymous: user.auth.isAnonymous,\r\n        })))\r\n        .catch(error => this.state$.dispatch(new loginActions.AnonymousAuthenticationFailureAction(error)))\r\n    );\r\n\r\n\r\n  @Effect({ dispatch: false }) createUser$ = this.actions$\r\n    .ofType(loginActions.CREATE_USER)\r\n    // .do(x => console.log('login.effect:createUser>', x))\r\n    .map((action: loginActions.CreateUserAction) => action.payload)\r\n    .map(payload => {\r\n      this.af.auth.createUserWithEmailAndPassword(\r\n        payload.userName,\r\n        payload.password)\r\n        .then(user => this.state$.dispatch(new loginActions.RestoreAuthenticationAction({\r\n          displayName: user.auth.displayName,\r\n          email: user.auth.email,\r\n          isAnonymous: user.auth.isAnonymous,\r\n        })))\r\n        .catch(error => this.state$.dispatch(new loginActions.CreateUserFailureAction(error)))\r\n    });\r\n\r\n    /**************************\r\n  @Effect({ dispatch: false }) emailAuthentication$ = this.actions$\r\n    .ofType(LoginActions.ActionTypes.EMAIL_AUTHENTICATION)\r\n    // .do(x => console.log('login.effect:emailAuthentication>', x))\r\n    .map((action: LoginActions.EmailAuthenticationAction) => action.payload)\r\n    .map(payload => {\r\n      this.af.auth.login(\r\n        { email: payload.userName, password: payload.password },\r\n        {\r\n          provider: AuthProviders.Password,\r\n          method: AuthMethods.Password\r\n        })\r\n        .then(user => this.state$.dispatch(new LoginActions.RestoreAuthenticationAction({\r\n          displayName: user.auth.displayName,\r\n          email: user.auth.email,\r\n          isAnonymous: user.auth.isAnonymous,\r\n        })))\r\n        .catch(error => this.state$.dispatch(new LoginActions.EmailAuthenticationFailureAction(error)))\r\n    });\r\n\r\n  @Effect({ dispatch: false }) authorizeWithGoogle$ = this.actions$\r\n    .ofType(LoginActions.ActionTypes.GOOGLE_AUTHENTICATION)\r\n    // .do(x => console.log('login.effect:authorizeWithGoogle>', x))\r\n    // .map((action: LoginActions.GoogleAuthenticationAction) => action.payload)\r\n    .map(() => {\r\n      this.af.auth.login(\r\n        {\r\n          provider: AuthProviders.Google,\r\n          method: AuthMethods.Popup\r\n        })\r\n        .then(user => this.state$.dispatch(new LoginActions.RestoreAuthenticationAction({\r\n          displayName: user.auth.displayName,\r\n          email: user.auth.email,\r\n          isAnonymous: user.auth.isAnonymous,\r\n        })))\r\n        .catch(error => this.state$.dispatch(new LoginActions.GoogleAuthenticationFailureAction(error)))\r\n    });\r\n\r\n******************/    \r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/effects/login.effect.ts","import { createSelector } from 'reselect';\r\nimport { ActionReducer } from '@ngrx/store';\r\n// import { compose } from '@ngrx/core/compose';\r\n// import { storeLogger } from 'ngrx-store-logger';\r\n// import { storeFreeze } from 'ngrx-store-freeze';\r\nimport { combineReducers } from '@ngrx/store';\r\n\r\nimport * as fromCollection from './collection';\r\nimport * as fromLogin from './login.reducer';\r\n\r\nexport interface State {\r\n  collection: fromCollection.State;\r\n  login: fromLogin.State;\r\n}\r\n\r\nexport const reducers = {\r\n  collection: fromCollection.reducer,\r\n  login: fromLogin.reducer\r\n};\r\n\r\n//const developmentReducer: ActionReducer<State> = compose(storeFreeze, storeLogger(), combineReducers)(reducers);\r\n// const productionReducer: ActionReducer<State> = combineReducers(reducers);\r\n\r\n/*\r\nDon't know where PROD is set.\r\n\r\nexport function reducer(state: any, action: any) {\r\n  if (PROD) {\r\n    return productionReducer(state, action);\r\n  }\r\n  else {\r\n    return developmentReducer(state, action);\r\n  }\r\n}\r\n*/\r\n/*export function reducer(state: any, action: any) {\r\n  return developmentReducer(state, action);\r\n}\r\n*/\r\nexport const getCollectionState = (state: State) => state.collection;\r\n\r\nexport const getCollectionLoaded = createSelector(getCollectionState, fromCollection.getLoaded);\r\nexport const getCollectionLoading = createSelector(getCollectionState, fromCollection.getLoading);\r\nexport const getCollectionTextItems = createSelector(getCollectionState, fromCollection.getTextItems);\r\n//\r\nexport const getLoginState = (state: State) => state.login;\r\n\r\nexport const getLoginDisplayName = createSelector(getLoginState, fromLogin.getDisplayName);\r\nexport const getLoginError = createSelector(getLoginState, fromLogin.getError);\r\nexport const getLoginIsAuthenticated = createSelector(getLoginState, fromLogin.getIsAuthenticated);\r\nexport const getLoginIsAuthenticating = createSelector(getLoginState, fromLogin.getIsAuthenticating);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/reducers/index.ts","import { Action } from '@ngrx/store';\r\n\r\nexport const ANONYMOUS_AUTHENTICATION = '[Login] Anonymous Authentication';\r\nexport const ANONYMOUS_AUTHENTICATION_FAILURE = '[Login] Anonymous Authentication Failure';\r\nexport const CREATE_USER = '[Login] Create User';\r\nexport const CREATE_USER_FAILURE = '[Login] Create User Failure';\r\nexport const EMAIL_AUTHENTICATION = '[Login] Email Authentication';\r\nexport const EMAIL_AUTHENTICATION_FAILURE = '[Login] Email Authentication Failure';\r\nexport const GOOGLE_AUTHENTICATION = '[Login] Google Authentication';\r\nexport const GOOGLE_AUTHENTICATION_FAILURE = '[Login] Google Authentication Failure';\r\nexport const LOGOUT = '[Login] Logout';\r\nexport const RESTORE_AUTHENTICATION = '[Login] Restore Authentication';\r\n\r\n\r\nexport class AnonymousAuthenticationAction implements Action {\r\n    readonly type = ANONYMOUS_AUTHENTICATION;\r\n\r\n    constructor() { }\r\n}\r\n\r\nexport class AnonymousAuthenticationFailureAction implements Action {\r\n    readonly type = ANONYMOUS_AUTHENTICATION_FAILURE;\r\n\r\n    constructor(public payload: any) { } // error\r\n}\r\n\r\n/*\r\nexport class AnonymousAuthenticationSuccessAction implements Action {\r\n    type = ActionTypes.ANONYMOUS_AUTHENTICATION_SUCCESS;\r\n\r\n    constructor(public payload: FirebaseAuthState) { }\r\n}\r\n*/\r\n\r\nexport class CreateUserAction implements Action {\r\n    readonly type = CREATE_USER;\r\n\r\n    constructor(public payload: {\r\n        userName: string,\r\n        password: string\r\n    }) { }\r\n}\r\n\r\nexport class CreateUserFailureAction implements Action {\r\n    readonly type = CREATE_USER_FAILURE;\r\n\r\n    constructor(public payload: any) { } // error \r\n}\r\n\r\n/*\r\nexport class CreateUserSuccessAction implements Action {\r\n    type = ActionTypes.CREATE_USER_SUCCESS;\r\n\r\n    constructor(public payload: FirebaseAuthState) { }\r\n}\r\n*/\r\n\r\nexport class EmailAuthenticationAction implements Action {\r\n    readonly type = EMAIL_AUTHENTICATION;\r\n\r\n    constructor(public payload: {\r\n        userName: string,\r\n        password: string\r\n    }) { }\r\n}\r\n\r\nexport class EmailAuthenticationFailureAction implements Action {\r\n    readonly type = EMAIL_AUTHENTICATION_FAILURE;\r\n\r\n    constructor(public payload: any) { } // error \r\n}\r\n\r\n/*\r\nexport class EmailAuthenticationSuccessAction implements Action {\r\n    type = ActionTypes.EMAIL_AUTHENTICATION_SUCCESS;\r\n\r\n    constructor(public payload: FirebaseAuthState) { }\r\n}\r\n*/\r\n\r\nexport class GoogleAuthenticationAction implements Action {\r\n    readonly type = GOOGLE_AUTHENTICATION;\r\n\r\n    constructor() { }\r\n}\r\n\r\nexport class GoogleAuthenticationFailureAction implements Action {\r\n    readonly type = GOOGLE_AUTHENTICATION_FAILURE;\r\n\r\n    constructor(public payload: any) { } // error \r\n}\r\n\r\n/*\r\nexport class GoogleAuthenticationSuccessAction implements Action {\r\n    type = ActionTypes.GOOGLE_AUTHENTICATION_SUCCESS;\r\n\r\n    constructor(public payload: FirebaseAuthState) { }\r\n}\r\n*/\r\n\r\nexport class LogoutAction implements Action {\r\n    readonly type = LOGOUT;\r\n\r\n    constructor() { }\r\n}\r\n\r\nexport class RestoreAuthenticationAction implements Action {\r\n    readonly type = RESTORE_AUTHENTICATION;\r\n\r\n    constructor(public payload: {\r\n        isAnonymous: boolean;\r\n        displayName: string | null,\r\n        email: string | null,\r\n    }) { }\r\n}\r\n\r\nexport type Actions =\r\n    AnonymousAuthenticationAction |\r\n    AnonymousAuthenticationFailureAction |\r\n    // AnonymousAuthenticationSuccessAction |\r\n    CreateUserAction |\r\n    CreateUserFailureAction |\r\n    // CreateUserSuccessAction |\r\n    EmailAuthenticationAction |\r\n    EmailAuthenticationFailureAction |\r\n    // EmailAuthenticationSuccessAction |\r\n    GoogleAuthenticationAction |\r\n    GoogleAuthenticationFailureAction |\r\n    // GoogleAuthenticationSuccessAction |\r\n    LogoutAction |\r\n    RestoreAuthenticationAction;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/login.action.ts"],"sourceRoot":""}